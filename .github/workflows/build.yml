name: Build and Release Game Executable

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: pip install pyinstaller

      - name: Build Executable
        run: |
          if [ "$RUNNER_OS" = "macOS" ]; then
            pyinstaller --onefile --windowed --name "LastThingsLast" main.py
          else
            pyinstaller --onefile --name "LastThingsLast" main.py
          fi
        shell: bash

      - name: Create .dmg Installer (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # Install create-dmg if not already installed
          brew install create-dmg

          # Clean up previous dist folder contents (force rebuild)
          echo "Cleaning up previous dist directory:"
          rm -rf dist/*

          # Check the contents of the dist folder before build (should be empty or contain old files)
          echo "Listing contents of dist directory before build:"
          ls -R dist

          # Build the app again using pyinstaller (to ensure everything is rebuilt)
          echo "Building the app with pyinstaller:"
          pyinstaller --onefile --windowed --name "LastThingsLast" main.py

          # Check the contents of the dist directory after the build
          echo "Listing contents of dist directory after build:"
          ls -R dist

          # Ensure all app contents have correct permissions (especially in the 'MacOS' and 'Resources' folders)
          echo "Fixing file permissions inside the .app bundle:"
          chmod -R 755 dist/LastThingsLast.app

          # Create the dmg-output directory if it doesn't exist
          echo "Creating dmg-output directory:"
          mkdir -p dist/dmg-output

          # Now run create-dmg and specify the output filename (absolute path)
          echo "Creating .dmg file with create-dmg:"
          create-dmg 'dist/LastThingsLast.app' '/github/workspace/dist/dmg-output/LastThingsLast-${{ github.ref_name }}.dmg' \
            --dmg-title="LastThingsLast Installer" \
            --overwrite || echo "create-dmg failed"

        shell: bash

      - name: Rename Executables
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            mv dist/LastThingsLast.exe dist/game-windows-${{ github.ref_name }}.exe
          elif [ "$RUNNER_OS" = "macOS" ]; then
            mv dist/LastThingsLast.dmg dist/game-macos-${{ github.ref_name }}.dmg
          fi
        shell: bash

      - name: Upload Executable to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/game-windows-${{ github.ref_name }}.exe
            dist/game-macos-${{ github.ref_name }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
